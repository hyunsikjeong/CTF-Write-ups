from gmpy2 import *
import math

def prime_range(B):
    primes = [2]
    prime = 2
    while 1:
        prime = next_prime(prime)
        if prime > B:
            break
        primes.append(prime)
    return primes

def lcm_upto(B):
    res = 1
    for p in prime_range(B):
        res *= p ** int(math.log(B) / math.log(p))
    return res

def xgcd(b, n):
    x0, x1, y0, y1 = 1, 0, 0, 1
    while n != 0:
        q, b, n = b // n, n, b % n
        x0, x1 = x1, x0 - q * x1
        y0, y1 = y1, y0 - q * y1
    return  b, x0, y0

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m

n = 2**29-1
#n = 299
#n = 1940294583943 * 63729394029409
#n = (2**2*3*5*7*11**2 + 1) * next_prime(10**100)
n = 5167940203359626183072960020238471587250476908248267219834132525159538747421942117015380584305118929601718232950911810724301463173432619286468120708146957017143619363153733274249577231340746695553479521450058265343494302620161080713021511920152096042253678042923755812571920128846492486793524120992715809157036794409810185309301260339481852650384097219001543998652187438905115694084380072608449796142325029686236575787066075393562570207855982455057306254966353307811350385663274461603563779494463685501219538694230560580482594752795268024264019570889248888213175869165764629893593798898592590479
B = 10 ** 6
while 1:
    print B
    print "ho"
    M = lcm_upto(B)
    print "mang"
    #print M
    for a in range(2, 10):
        print a
        result = xgcd(pow(a, M, n) - 1, n)
        if result[0] != 1 and result[0] != n:
            print result
            print n / result[0]
            print n
            break
    break
    B += 1

p = result[0]
q = n / result[0]
print p
print q
print n
d = modinv(65537, (p - 1) * (q - 1))
print d
encrypt = 1669939362291856053764666486037691501864897284181631420169672178762327348119508493162556855645215671113828380176374030497707283429014735891067232841784741862227364498440336193753635709953610647868432771326020011322252361171683377728148935398781495234974609508474121559778188947801920531189417281146413875436998146128687654415795960223027541796785409514550660090687477191040853285106700454602355218914964501749883059429262247324453661494999579676785700118069093856227074700732997890449131763093003720178857209477247705769180598063175140375005298378414573407703248918888619850037890412252229575552
print powmod(encrypt, d, n)
